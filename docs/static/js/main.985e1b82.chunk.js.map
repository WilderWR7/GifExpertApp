{"version":3,"sources":["Components/AddCategory.js","helpers/getGif.js","hooks/useFetchGifs.js","Components/GifItem.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategory","useState","input","setinput","onSubmit","e","preventDefault","val","onChange","target","value","getGif","category","a","url","fetch","resp","json","data","img","map","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","GifItem","className","src","alt","GifGrid","console","log","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAwBeA,MAtBf,YAAuC,IAAhBC,EAAe,EAAfA,YAEnB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACFN,GAAY,SAAAO,GAAG,OAAKL,GAAL,mBAAcK,QAU7B,SACI,uBAAOC,SARK,SAACH,GACjBF,EAASE,EAAEI,OAAOC,a,+BCIXC,EAfH,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACLC,EADK,0FACoFF,EADpF,sBAEQG,MAAMD,GAFd,cAELE,EAFK,gBAGYA,EAAKC,OAHjB,uBAGHC,EAHG,EAGHA,KACFC,EAAMD,EAAKE,KAAK,SAAAD,GAAO,IAAD,EACxB,MAAO,CACHE,GAAIF,EAAIE,GACRC,MAAOH,EAAIG,MACXR,IAAG,UAAEK,EAAII,cAAN,aAAE,EAAYC,iBAAiBV,QAR/B,kBAYJK,GAZI,4CAAH,sDCkBGM,EAfM,SAACb,GAClB,MAA0BX,mBAAS,CAC/BiB,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAPAC,qBAAU,WACNlB,EAAOC,GAAUkB,MAAK,SAAAzB,GAAMuB,EAAS,CACjCV,KAAMb,EACNqB,SAAS,SAEd,CAACd,IAEGe,GCdI,SAASI,EAAT,GAAgC,IAAbT,EAAY,EAAZA,MAAMR,EAAM,EAANA,IACpC,OACI,sBAAKkB,UAAY,yCAAjB,UACI,qBAAKC,IAAOnB,EAAKoB,IAAOZ,IACxB,kCAAKA,EAAL,UCFG,SAASa,EAAT,GAAgC,IAAbvB,EAAY,EAAZA,SAC9B,EAAqBa,EAAab,GAA3BM,EAAP,EAAOA,KAAKQ,EAAZ,EAAYA,QAEZ,OADAU,QAAQC,IAAIX,GAER,qCACI,qBAAIM,UAAY,oCAAhB,cAAwDpB,EAAxD,OACA,qBAAKoB,UAAU,YAAf,SAEId,EAAKE,KAAI,SAAAD,GACL,OAAO,cAACY,EAAD,eAA6BZ,GAAbA,EAAIE,YCUhCiB,MAnBf,WAEI,MAAgCrC,mBAAS,CAAC,QAA1C,mBAAOW,EAAP,KAAiBZ,EAAjB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,YAAeA,IAC5B,uBAEIY,EAASQ,KAAK,SAAAR,GACV,OAAO,cAACuB,EAAD,CAA4BvB,SAAaA,GAAxBA,U,MCT5C2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.985e1b82.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction AddCategory({ setcategory }) {\r\n\r\n    const [input, setinput] = useState(\"\");\r\n    const submitChange = (e)=>{\r\n        e.preventDefault(); \r\n        setcategory(val => [input,...val])\r\n    }\r\n    \r\n    const inputChange = (e)=>{\r\n        setinput(e.target.value);\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <form onSubmit = { submitChange } >\r\n            <input onChange = { inputChange }/>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default AddCategory\r\n\r\n","const getGif = async( category )=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=L6hWh544TTT8bdJTeCW1WjkHFKgAC9tT&q=${category}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const img = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    } )\r\n\r\n    return img;\r\n}\r\n\r\nexport default getGif;","import { useEffect, useState } from 'react'\r\nimport getGif from '../helpers/getGif'\r\n\r\nconst useFetchGifs = (category)=> {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGif(category).then(e=> { setstate({\r\n            data: e,\r\n            loading: false\r\n        }) } )    \r\n    }, [category])\r\n\r\n    return state;\r\n}\r\nexport default useFetchGifs","import React from 'react'\r\n\r\nexport default function GifItem({ title,url}) {\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeIn'>\r\n            <img src = {url} alt = {title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifItem from './GifItem'\r\n\r\nexport default function GifGrid({ category }) {\r\n    const {data,loading}=useFetchGifs(category);    \r\n    console.log(loading)\r\n    return (\r\n        <>\r\n            <h2 className = 'animate__animated animate__fadeIn' > { category } </h2>\r\n            <div className=\"card-grid\">\r\n            {\r\n                data.map(img=> {\r\n                    return <GifItem key = {img.id}  {...img}/>\r\n                })\r\n            }            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n\r\n    const [category, setcategory] = useState(['wwe']);\r\n\r\n    return (\r\n        <>\r\n            <h1> GifExpertApp </h1>\r\n            <AddCategory setcategory = {setcategory}/>\r\n            <hr/>\r\n            {\r\n                category.map( category=>{\r\n                    return <GifGrid key = { category } category = { category } />\r\n                } )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}